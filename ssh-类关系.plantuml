@startuml

abstract class IcapBase {
    __ public: __
    + m_ev: struct event *
    ..
    + m_bev: struct bufferevent *
    ..
    + init()
    ..
    + {abstract} icapBaseWriteEof()
    ..
    + {abstract} icapBaseReadCb()
    ..
    + {abstract} icapBaseWriteCb()
    ..
    + {abstract} icapBaseCloseCb()
    ..
    + {abstract} icapBaseErrorCb()
    ..
    + {abstract} icapBaseConnectCb()
    ..
    + {abstract} icapBaseTcpTimeoutCb()
    ..
    + {abstract} icapBaseScanTimeoutCb()
    ..
    + icapBaseEncapHostOption()
    ..
    + icapBaseEncapExtendOption()
    ..
    + icapBaseEncapAllowOption()
    ..
    + icapBaseEncapPreviewOption()
    ..
    + icapBaseEncapEncapsulatedOption()
    ..
    + icapBaseScanned()
    ..
    + icapBaseScanning()
    ..
    + icapBaseScanning()
    ..
    + icapBaseScanning()
    ..
    + icapBaseGetConnected()
    ..
    + icapBaseSetConnected()
    ..
    + icapBaseGetVaild()
    ..
    + icapBaseSetVaild()
    ..
    + icapBaseGetHasData()
    ..
    + icapBaseSetHasData()
    ..
    + icapBaseTcpTimeUpdate()
    ..
    + icapBaseTcpTimeout()
    ..
    + icapBaseScanTimeout()
    ..
    + &operator <<()
    __ protected: __
    # {static} s_allow204: bool
    ..
    # {static} s_preview: u32
    ..
    # {static} s_extend_clientIp: bool
    ..
    # {static} s_extend_serverIp: bool
    ..
    # {static} s_extend_clientPort: bool
    ..
    # {static}s _extend_serverPort: bool
    ..
    # {static} s_extend_protocol: bool
    __ private: __
    - m_proto: string
    ..
    - m_src_host: string
    ..
    - m_dst_host: string
    ..
    - m_src_port: string
    ..
    - m_dst_port: string
    ..
    - m_has_data: bool
    ..
    - m_vaild: bool
    ..
    - m_connected: bool
    ..
    - m_ctx: void *
    ..
    - m_cb: icap_scan_func_t
    ..
    - m_atime: time_t
    ..
    - m_base: struct event_base *
    ..
    - {static} s_cnt: std::atomic<uint64_t>
    ..
}
class IcapLocalSsh {
    __ public: __
    + {abstract} icapBaseWriteEof()
    ..
    + {abstract} icapBaseReadCb()
    ..
    + {abstract} icapBaseWriteCb()
    ..
    + {abstract} icapBaseCloseCb()
    ..
    + {abstract} icapBaseErrorCb()
    ..
    + {abstract} icapBaseConnectCb()
    ..
    + {abstract} icapBaseTcpTimeoutCb()
    ..
    + {abstract} icapBaseScanTimeoutCb()
    ..
    + icapLocalSshWriteBody()
    ..
    + icapLocalSshBypassBody()
    ..
    + &operator <<()
    ..
    + m_recipient_channel_id: u32
    ..
    + m_sender_channel_id: u32
    __ private: __
    - m_client_scaning: vector<ssh_buffer>
    ..
    - m_server_scaning: vector<ssh_buffer>
    ..
    - m_client_scaned: vector<ssh_buffer>
    ..
    - m_server_scaned: vector<ssh_buffer>
    ..
    - m_write_stage: bool
    ..
    - m_request_wait_finish: bool
    ..
    - m_response_wait_finish: bool
    ..
    - m_reqmod_stage: bool
    ..
    - m_icap_parse: IcapOtherParseResponse
    ..
    - localSshRead204()
    ..
    - localSshRead100()
    ..
    - localSshRead200()
    ..
    - localSshAdjustDirectory()
    ..
    - localSshWriteDirection()
    ..
    - localSshWriteTcpFin()
    ..
    - localSshWriteBody()
    ..
    - localSshEncapExtendChannel()
}

note right of IcapLocalSsh::"icapBaseWriteEof" 
    以下皆为来自基类的虚函数
    icapBaseWriteEof; 数据流提前关闭时，需要关闭icap
    icapBaseReadCb; icap有数据时触发
    icapBaseWriteCb; icap有数据写完时触发
    icapBaseCloseCb; icap关闭时触发
    icapBaseErrorCb; icap出现错误时触发
    icapBaseConnectCb; icap连接时时触发
    icapBaseTcpTimeoutCb; icap连接超时触发
end note

note right of IcapLocalSsh::"icapLocalSshWriteBody" 
    以下皆为对外开放函数
    icapLocalSshWriteBody; SSH数据封装为Icap数据，进行送扫
    icapLocalSshBypassBody; SSH数据，进行放行
end note

note right of IcapLocalSsh::"m_client_scaning" 
    client_scaning, 来自客户端的数据，待送扫数据
    server_scaning, 来自服务端的数据，待送扫数据
end note

note right of IcapLocalSsh::"m_client_scaned" 
    client_scaned, 来自客户端的数据，已经送扫,待发送给服务端
    server_scaned, 来自服务端的数据，已经送扫,待发送给客户端
end note

note right of IcapLocalSsh::"m_write_stage" 
    icap协议规定，请求与响应必须一来一回
    m_write_stage记录当前是读还是写阶段
end note

note right of IcapLocalSsh::"m_reqmod_stage" 
    记录当前是reqmod还是respmod
end note

note right of IcapLocalSsh::"localSshAdjustDirectory" 
    调整当前的数据为reqmod还是respmod阶段
end note

note right of IcapLocalSsh::"localSshWriteDirection" 
    通知icap server端，ssh流量切换了方向
end note

note right of IcapLocalSsh::"localSshWriteTcpFin" 
    通知icap server端，ssh流量进行了close操作
end note

class IcapOtherParseResponse {
    __ public: __
    + m_code: u16
    ..
    + m_icapHead: struct evbuffer *
    ..
    + m_other_head: struct evbuffer *
    ..
    + m_other_body: struct evbuffer *
    ..
    + icapOtherParseResponseInit()
    ..
    + icapOtherParseResponseParse()
    __ private: __
    - m_parse_stage: u8
    ..
    - m_res_head_offset: u32
    ..
    - m_res_body_offset: u32
    ..
    - parseIcapHeadOption()
    ..
    - parseIcapHeadOptionCode()
    ..
    - parseIcapHeadOptionConnection()
    ..
    - parseIcapHeadOptionEncapsulated()
    ..
    - parseIcapHead()
    ..
    - parseOtherHead()
    ..
    - parseOtherBody()
}

note right of IcapLocalSsh::"localSshWriteTcpFin" 
    通知icap server端，ssh流量进行了close操作
end note

note right of IcapOtherParseResponse
     IcapOtherParseResponse为辅助类----用来解析icap报文
    当icap不完整时, 缓存icap直到icap解析完成
    icap解析完整后，该对象会被init
end note


together {
    IcapBase - IcapLocalSsh
}
IcapLocalSsh::m_icap_parse --> IcapOtherParseResponse
@enduml